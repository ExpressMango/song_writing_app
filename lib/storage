import 'package:http/http.dart' as http;

final apiKey = "your_api_key_here";

// Function to send a request to the OpenAI API
Future<String> generateSong(String keyword) async {
  final response = await http.post(
    "https://api.openai.com/v1/engines/davinci-codex/completions",
    headers: {
      "Content-Type": "application/json",
      "Authorization": "Bearer $apiKey"
    },
    body: jsonEncode({
      "prompt": "Write a song based on the following keyword: $keyword",
      "max_tokens": 2048
    })
  );

  if (response.statusCode == 200) {
    return response.body;
  } else {
    throw Exception('Failed to generate song');
  }
}



  String generatedSong;
  void _generate(){
   generatedSong = await generateSong(yourTextFieldController.text);
   setState(() {
      //Place the generated song to your container
   });
  }



ElevatedButton(
  style: ElevatedButton.styleFrom(minimumSize: Size(300, 60)),
  onPressed: () {
    setState(() {
      // Get the generated song and update the state of the generated song
      _generatedSong = generateSong(_controller.text);
    });
  },
  child: Text(
    'Compose',
    style: TextStyle(
        fontSize: 22,
        color: Colors.black54,
        fontWeight: FontWeight.w600),
  ),
),
SizedBox(
  height: 10,
),
Container(
  color: Colors.grey[100],
  width: double.infinity,
  height: 363,
  child: Text(_generatedSong), //use the generated song variable here
)








import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class Generate_Songs extends StatefulWidget {
  Generate_Songs({Key? key}) : super(key: key);

  @override
  State<Generate_Songs> createState() => _Generate_SongsState();
}

final _controller = TextEditingController();
String _generatedSong = '';
final apiKey = "your_api_key_here";

class _Generate_SongsState extends State<Generate_Songs> {
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        backgroundColor: Colors.white,
        appBar: AppBar(
          title: Text(
            'Generate Your Song Lyrics Here',
            style: TextStyle(
                fontSize: 20, color: Colors.white, fontWeight: FontWeight.w400),
          ),
          centerTitle: true,
        ),
        body: Column(
          children: [
            Container(
              child: Image.asset(
                'images/singing.png',
                height: 200,
              ),
            ),
            Text(
              'What Is Your Song About',
              style: TextStyle(
                  fontSize: 20,
                  color: Colors.black.withOpacity(0.8),
                  fontWeight: FontWeight.w500),
            ),
            SizedBox(
              height: 20,
            ),
            Container(
              decoration: BoxDecoration(
                  color: Colors.grey[100],
                  shape: BoxShape.rectangle,
                  borderRadius: BorderRadius.all(Radius.circular(15))),
              margin: EdgeInsets.symmetric(vertical: 30, horizontal: 10),
              width: double.infinity,
              child: Form(
                child: TextFormField(
                  decoration: InputDecoration(),
                  controller: _controller,
                ),
              ),
            ),
            ElevatedButton(
              style: ElevatedButton.styleFrom(minimumSize: Size(300, 60)),
              onPressed: () {
                setState(() {
                  _generatedSong = generateSong(_controller.text);
                });
              },
              child: Text(
                'Compose',
                style: TextStyle(
                    fontSize: 22,
                    color: Colors.black54,
                    fontWeight: FontWeight.w600),
              ),
            ),
            SizedBox(
              height: 10,
            ),
            Container(
              color: Colors.grey[100],
              width: double.infinity,
              height: 363,
              child: Text(_generatedSong),
            )
          ],
        ),
      ),
    );
  }

      Future<String> generateSong(String keyword) async {
        final response = await http.post(
          "https://api.openai.com/v1/engines/davinci-codex/completions",
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer $apiKey"
          },
          body: jsonEncode(
            {
              "prompt": keyword,
              "max_tokens": 2048,
            }
          ),
        );

        if (response.statusCode == 200) {
          final jsonData = jsonDecode(response.body);
          final song = jsonData["choices"][0]["text"];
          return song;
        } else {
          return 'Error';
        }
      }







